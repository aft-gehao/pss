<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.afanti.psi.use.dao.UseDao">
    <insert id="addProduct_material_out_detail"  parameterType="Product_material_out_detail">
      INSERT INTO product_material_out_detail (out_id,product_id,space_id,enter_d_id,amount,unit,out_type_d_billno,batch_no,staff_id,out_date)
      VALUES(#{out_id},#{product_id},#{space_id},#{enter_d_id},#{amount},#{unit},#{out_type_d_billno},#{batch_no},#{staff_id},#{out_date})
    </insert>
    <select id="orderByEnter_d_id" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT enter_d_id
        FROM product_material_enter_detail
        WHERE product_id=#{product_id}
        and batch_no=#{batch_no}
        and space_id=#{space_id}
        and amount >= #{amount}
         limit 1
    </select>
    <select id="orderByOutID" resultType="java.lang.Integer">
        SELECT MAX(out_id) FROM product_material_out ORDER BY oper_time DESC
    </select>
    <insert id="addProduct_material_out" parameterType="Product_material_out">
        INSERT INTO product_material_out(out_name,out_type,oper_id,oper_time,out_type_billno)
        VALUES(#{out_name},#{out_type},#{oper_id},#{oper_time},#{out_type_billno})
    </insert>
    <select id="Receive_Preview" parameterType="java.lang.Integer" resultType="product_use">
      SELECT
          pmi.*,
          pu.*,
          t1.`staff_name`,
          t2.`staff_name` check_name
        FROM
          product_material_info pmi
          INNER JOIN product_use pu
            ON (pmi.product_id = pu.product_id)
           INNER JOIN staff_info t1
             ON t1.`staff_id`=pu.`use_staff`
               INNER JOIN staff_info t2
             ON t2.`staff_id`=pu.`check_staff`
        WHERE pu.use_id=#{use_id}
    </select>
    <select id="useSelect"  parameterType="product_use" resultType="product_use">
       SELECT
          t.*,
          t1.staff_name,
          t2.name_en nameEn,
          t2.sku,
          t2.cas,
           t4.dict_name,
          (
                    SELECT
                        GROUP_CONCAT(d.space_name, '-')
                    FROM
                        dict_warehouse_space d
                    WHERE
                        FIND_IN_SET(
                            d.space_id,
                            query_parent_warehouse (t3.space_id)
                        )
                ) AS space_name
        FROM
          product_use t
          LEFT JOIN staff_info t1
            ON t1.staff_id = t.use_staff
          LEFT JOIN product_material_info t2
            ON t.product_id = t2.product_id
          LEFT JOIN dict_warehouse_space t3
            ON t3.space_id=t.space_id
          LEFT JOIN pss_dict t4
             ON t4.dict_id=t.status
        WHERE use_is_del=0 and use_id= #{use_id}
    </select>
    <select id="getUsePageList"  parameterType="Map" resultType="product_use">
        SELECT
        t.*,
        t1.dict_name,
        t2.staff_name,
        t3.name_ch nameCh,
        t3.name_en nameEn,
        t3.cas,
        t3.sku
        FROM
        product_use t
        LEFT JOIN pss_dict t1
        ON t.status=t1.dict_id
        LEFT JOIN staff_info t2
        ON t2.staff_id=t.use_staff
        LEFT JOIN product_material_info t3
        ON t3.product_id=t.product_id
        WHERE use_is_del=0
        <if test="params.use_name!=null and params.use_name!=''">
            and t.use_name like '%${params.use_name}%'
        </if>
        <if test="params.status!=null and params.status!=''">
            and t.status like '%${params.status}%'
        </if>
        <if test="params.cas!=null and params.cas!=''">
            and t3.cas like '%${params.cas}%'
        </if>
        <if test="params.sku!=null and params.sku!=''">
            and t3.sku like '%${params.sku}%'
        </if>
        <if test="params.start_time!=null and params.start_time!=''">
            AND t.use_time between '${params.start_time}' and date_add('${params.end_time}',interval 1 day)
        </if>
        order by t.use_time desc
    </select>
    <select id="getUsePageCount"  parameterType="Map" resultType="Integer">
        SELECT
        count(1)
        FROM
        product_use t
        LEFT JOIN pss_dict t1
        ON t.status=t1.dict_id
        LEFT JOIN staff_info t2
        ON t2.staff_id=t.use_staff
        LEFT JOIN product_material_info t3
        ON t3.product_id=t.product_id
        WHERE use_is_del=0
        <if test="params.use_name!=null and params.use_name!=''">
            and t.use_name like '%${params.use_name}%'
        </if>
        <if test="params.status!=null and params.status!=''">
            and t.status like '%${params.status}%'
        </if>
        <if test="params.cas!=null and params.cas!=''">
            and t3.cas like '%${params.cas}%'
        </if>
        <if test="params.sku!=null and params.sku!=''">
            and t3.sku like '%${params.sku}%'
        </if>
        <if test="params.start_time!=null and params.start_time!=''">
            AND t.use_time between '${params.start_time}' and date_add('${params.end_time}',interval 1 day)
        </if>
    </select>
    <insert id="useAdd" parameterType="product_use">
        insert into product_use
        (
        product_id,
        use_amount,
        use_unit,
        use_staff,
        use_time,
        use_name,
        use_batch_no,
        use_is_del,
        status,
        identifying_code,
        space_id ,
        use_desc,
        purity
        )
        VALUES
        (
        #{product_id},
        #{use_amount},
        #{use_unit},
        #{use_staff},
        #{use_time},
        #{use_name},
        #{use_batch_no},
        #{use_is_del},
        #{status},
        #{identifying_code},
        #{space_id},
        #{use_desc},
        #{purity}
        )
    </insert>
    <update id="useDel" parameterType="product_use" >
        UPDATE product_use t
        SET t.use_is_del=1
        WHERE t.use_id=#{use_id}
    </update>
    <update id="useShenhe" parameterType="Map" >
        UPDATE product_use t
        SET t.status=#{status},t.check_time=#{check_time},t.check_staff=#{check_staff},t.check_desc=#{desc}
        WHERE t.use_id=#{use_id}
    </update>
    <update id="useOut" parameterType="product_use" >
        UPDATE
        product_material_enter_detail
        SET
        amount = amount - #{use_amount}
        WHERE product_id = #{product_id} AND batch_no= #{use_batch_no}
    </update>
    <update id="statusOut" parameterType="product_use" >
        UPDATE
        product_use
        SET
        STATUS = #{status}
        WHERE use_id=#{use_id}
    </update>
    <update id="useMod" parameterType="product_use" >
        UPDATE product_use t
        SET t.use_name=#{use_name},use_amount=#{use_amount}
        WHERE t.use_id=#{use_id}
    </update>
    <select id="getStaffInfo"  parameterType="Map" resultType="Staff_info">
        SELECT
        *
        FROM staff_info
        WHERE staff_name=#{staff_name} and status=0
    </select>
    <insert id="useAdd_yanfa" parameterType="product_use">
        insert into product_use
        (
        product_id,
        use_amount,
        use_unit,
        use_staff,
        use_time,
        use_name,
        use_batch_no,
        use_is_del,
        status,
        space_id,
        use_desc,
        purity,
        is_sale,
        sale_d_id
        )
        VALUES
        (
        #{product_id},
        #{use_amount},
        #{use_unit},
        #{use_staff},
        #{use_time},
        #{use_name},
        #{use_batch_no},
        #{use_is_del},
        #{status},
        #{space_id},
        #{use_desc},
        #{purity},
        #{is_sale},
        #{sale_d_id}
        )
    </insert>
    <select id="getPurchasingPageList"  parameterType="Map" resultType="product_use">
        SELECT
        t.*,
        t1.dict_name,
        t2.staff_name,
        t3.cas,
        t3.name_ch nameCh,
        t3.name_en nameEn,
        t4.staff_name check_name
        FROM
        product_use t
        LEFT JOIN pss_dict t1
        ON t.status=t1.dict_id
        LEFT JOIN staff_info t2
        ON t2.staff_id=t.use_staff
        LEFT JOIN product_material_info t3
        ON t3.product_id=t.product_id
        LEFT JOIN staff_info t4
        ON t4.staff_id=t.check_staff
        WHERE use_is_del=0
        <if test="params.cas!=null and params.cas!=''">
            and t3.cas like '%${params.cas}%'
            or t4.staff_name like '%${params.cas}%'
            or t3.name_ch like '%${params.cas}%'
            or t3.sku like '%${params.cas}%'
        </if>
        <if test="params.status!=null and params.status!=''">
            and t.status IN ${params.status}
        </if>
        <if test="params.time!=null and params.time!=''">
            and  ${params.time}
        </if>
        <if test="params.start_time!=null and params.start_time!=''">
            AND t.use_time between '${params.start_time}' and date_add( '${params.end_time}',interval 1 day)
        </if>
        order by t.use_time desc
    </select>
    <select id="getPurchasingPageCount"  parameterType="Map" resultType="Integer">
        SELECT
        count(1)
        FROM
        product_use t
        LEFT JOIN pss_dict t1
        ON t.status=t1.dict_id
        LEFT JOIN staff_info t2
        ON t2.staff_id=t.use_staff
        LEFT JOIN product_material_info t3
        ON t3.product_id=t.product_id
        LEFT JOIN staff_info t4
        ON t4.staff_id=t.check_staff
        WHERE use_is_del=0
        <if test="params.cas!=null and params.cas!=''">
            and t3.cas like '%${params.cas}%'
            or t4.staff_name like '%${params.cas}%'
            or t3.name_ch like '%${params.cas}%'
            or t3.sku like '%${params.cas}%'
        </if>
        <if test="params.status!=null and params.status!=''">
            and t.status IN ${params.status}
        </if>
        <if test="params.time!=null and params.time!=''">
            and  ${params.time}
        </if>
        <if test="params.start_time!=null and params.start_time!=''">
            AND t.use_time between '${params.start_time}' and date_add( '${params.end_time}',interval 1 day)
        </if>
    </select>
    <insert id="purchasing_add_del" parameterType="product_use">
        insert into material_purchase
        (
        all_total,
        purchase_isdel

        )
        VALUES
        (
        #{use_amount},
         1
        )
    </insert>
    <select id="purchasing_max"   resultType="Integer">
       SELECT MAX(purchase_id) FROM material_purchase
    </select>
    <select id="use_max"   resultType="Integer">
        SELECT MAX(use_id) FROM product_use
    </select>
    <insert id="purchasing_detail_add_del" parameterType="product_use">
        insert into material_purchase_detail
        (
        use_id,
        purchase_id,
        product_id,
        amount,
        unit,
        purity,
         `desc`,
        purchase_detail_isdel
        )
        VALUES
        (
        #{use_id},
        #{purchase_id},
        #{product_id},
        #{use_amount},
        #{use_unit},
        #{purity},
        #{use_desc},
        1
        )
    </insert>
    <update id="purchase_detail_update" parameterType="Map" >
       UPDATE
          material_purchase_detail
        SET
          purchase_detail_isdel = 0,
          unit_price =#{price},
          amount =#{amount},
          unit=#{unit},
          univalence=#{univalence},
          `desc`=#{desc}
          WHERE use_id=#{use_id}
    </update>
    <update id="purchase_update" parameterType="Map" >
        UPDATE
          material_purchase
        SET
          purchase_isdel = 0,
          supplier_id=#{supplier_id},
          purchase_name = #{purchasing_name},
          staff_id=#{staff_id},
          purchase_time=#{purchase_time},
          stock_status=5004
          WHERE purchase_id=#{purchase_id}
    </update>
    <select id="purchase_id"  parameterType="Map" resultType="Integer">
        SELECT purchase_id FROM material_purchase_detail where use_id=#{use_id}
    </select>
    <select id="supplier_select"  parameterType="Map" resultType="Integer">
       SELECT
          COUNT(1)
        FROM
          cus_supplier_info t
        WHERE t.name = #{supplier_name}
    </select>
    <select id="supplier_id_select"  parameterType="Map" resultType="Integer">
        SELECT
        cs_sup_id
        FROM
        cus_supplier_info t
        WHERE t.name = #{supplier_name}
    </select>
    <update id="use_status_update" parameterType="Map" >
        UPDATE
        product_use
        SET
        status = 5004
        WHERE use_id=#{use_id}
    </update>
    <update id="use_update" parameterType="Map" >
        UPDATE
        product_use
        SET
        use_amount = #{amount}
        WHERE use_id=#{use_id}
    </update>
    <update id="useUpdate" parameterType="Map" >
        UPDATE product_use t
        SET t.status=#{status}
        WHERE t.use_id=#{use_id}
    </update>
    <insert id="supplier_insert" parameterType="Map">
        insert into cus_supplier_info
        (
        supplier_id,
        `name`,
        status,
        create_oper,
        create_time
        )
        VALUES
        (
         1,
        #{supplier_name},
         0,
        #{staff_id},
        #{purchase_time}
        )
    </insert>
    <insert id="insert_sup_pro" parameterType="Map">
        insert into supplier_product_rel
        (
        supplier_id,
         product_id,
        status,
        create_oper,
        create_time
        )
        VALUES
        (
        #{supplier_id},
        #{product_id},
        0,
        #{staff_id},
        #{purchase_time}
        )
    </insert>
    <select id="supplier_max"   resultType="Integer">
        SELECT MAX(cs_sup_id) FROM cus_supplier_info
    </select>
    <select id="sup_pro_sel"   resultType="Integer">
       SELECT
          COUNT(1)
        FROM
          supplier_product_rel t
        WHERE t.`Supplier_id`=#{supplier_id} AND t.`Product_id`=#{product_id}
    </select>

    <update id="user_purCancel" parameterType="Map">
        UPDATE
        product_use
        SET
        use_is_del=#{use_is_del}
        WHERE  use_id= #{use_id}
    </update>


    <select id="staff_mobilephone" parameterType="Map" resultType="staff_info">
        SELECT
        t1.role_name,
        t3.staff_name,
        t3.mobilephone
        FROM
        pss_role t1
        INNER JOIN pss_role_user t2 ON t1.role_id=t2.role_user_roleid
        INNER JOIN staff_info t3 ON t3.staff_id=t2.role_user_staffinfoid
        WHERE
        t1.role_id = 49
    </select>
    <select id="staffSelect"  resultType="staff_info">
        SELECT
        *
        FROM
        staff_info
    </select>
    <select id="use_mobilephone" parameterType="Map" resultType="product_use">
        select `status` from product_use where use_id=#{use_id}
    </select>


   <select id="select_product_useStatus" parameterType="Map" resultType="product_use">
        select `status` from product_use where sale_d_id=#{sale_d_id}
    </select>

    <update id="update_status" parameterType="Map">
        UPDATE product_sale_detail t
            INNER JOIN product_sale t1 ON t.sale_id=t1.sale_id
            SET t.sale_status = #{status},t1.`status`=#{status}
            WHERE
	          t.sale_d_id = #{sale_d_id}
    </update>
</mapper>
