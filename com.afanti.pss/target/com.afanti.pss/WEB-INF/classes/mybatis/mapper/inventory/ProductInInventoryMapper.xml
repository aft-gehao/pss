<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.afanti.psi.inventory.dao.ProductInInventoryDao">
    <select id="purchasingInventoryTemplateFind" parameterType="java.lang.Integer" resultType="Product_material_enter">
      SELECT * FROM(
          (SELECT pe.enter_id,
          pe.enter_name,
          pe.enter_type,
          pe.oper_id,
          pe.oper_time,
          pe.desc,
          pe.enter_type_billno,
          pe.enter_isdel,
          pd.batch_no,
          pd.amount,
          pd.enter_date,
          sr.p_pack,
          pd.unit p_unit ,
          sr.create_oper
           FROM product_material_enter pe
          INNER JOIN product_material_enter_detail pd ON (pe.enter_id=pd.enter_id)
          INNER JOIN supplier_product_rel sr ON (pd.product_id=sr.Product_id)
          WHERE pe.enter_type_billno =#{enter_type_billno}
          )AS  s
        )
    </select>
    <select id="getProductInInventoryPageList" parameterType="Map" resultType="PurchaseInventoryInfo">
        SELECT
        *
        FROM
        (SELECT
        9001 AS in_type,
        k1.name_en,
        k1.`name_ch`,
        k1.`cas`,
        k1.`sku`,
        t.purchase_id,
        t.supplier_id,
        t.stock_status,
        d.dict_name AS stock_status_name,
        k.`amount`,
        k.`unit`,
        k.`kd_code`,
        k.`kd_num`,
        t.all_total,
        t.purchase_time,
        t2.staff_name,
        t3.`name` AS supplier_name
        FROM
        material_purchase t
        LEFT JOIN staff_info t2
        ON (t.staff_id = t2.staff_id)
        LEFT JOIN cus_supplier_info t3
        ON (t.supplier_id = t3.cs_sup_id)
        LEFT JOIN pss_dict d
        ON (t.stock_status = d.dict_id)
        LEFT JOIN material_purchase_detail k
        ON k.`purchase_id` = t.`purchase_id`
        LEFT JOIN product_material_info k1
        ON k1.`product_id` = k.`product_id`
        WHERE t.purchase_isdel = 0

        UNION
        ALL
        SELECT
        7003 AS in_type,
        k3.name_en,
        k3.name_ch,
        k3.cas,
        k3.sku,
        p1.research_id,
        '',
        p1.status,
        p2.dict_name AS stock_status_name,
        p1.amount,
        p1.unit,
        '',
        '',
        p1.amount,
        p1.research_time,
        p3.staff_name,
        ''
        FROM
        product_research p1
        LEFT JOIN pss_dict p2
        ON (p1.status = p2.dict_id)
        LEFT JOIN staff_info p3
        ON (p3.staff_id = p1.research_staff)
        LEFT JOIN product_material_info k3
        ON k3.`product_id` = p1.`product_id`
        WHERE p1.research_is_del = 0
        UNION
        ALL
        SELECT
        9002 AS in_type,
        k5.name_en,
        k5.name_ch,
        k5.cas,
        k5.sku,
        t1.sale_id,
        t1.customer_id,
        t3.stock_status,
        d2.dict_name AS stock_status_name,
        k4.amount,
        k4.unit,
        '',
        '',
        t1.all_total,
        t3.return_time,
        sf.staff_name,
        cu.`name` AS supplier_name
        FROM
        product_sale t1
        LEFT JOIN product_sale_return t3
        ON (t3.sale_id = t1.sale_id)
        LEFT JOIN pss_dict d2
        ON (t3.stock_status = d2.dict_id)
        LEFT JOIN cus_supplier_info cu
        ON (cu.cs_sup_id = t1.customer_id)
        LEFT JOIN staff_info sf
        ON (sf.staff_id = t1.staff_id)
        LEFT JOIN product_sale_return_detail k4
        ON k4.r_sale_id = t3.`r_sale_id`
        LEFT JOIN product_material_info k5
        ON k5.product_id = k4.product_id
        WHERE t1.sale_isdel = 0) t1
        WHERE t1.stock_status IS NOT NULL

        <if test="params.in_type!=null and params.in_type!=''">
            and t1.in_type = ${params.in_type}
        </if>
        <if test="params.stock_status!=null and params.stock_status!=''">
            and (t1.stock_status=${params.stock_status})
        </if>
        <if test="params.time!=null and params.time!=''">
            and ${params.time}
        </if>
        <if test="params.search!=null and params.search!=''">
            AND (t1.cas like '%${params.search}%' or t1.sku like '%${params.search}%' or staff_name like '%${params.search}%')
        </if>
        <if test="params.start_time!=null and params.start_time!='' or params.end_time!=null and params.end_time!=''">
            AND t1.purchase_time between '${params.start_time}' and date_add('${params.end_time}',interval 0 day)
        </if>
        order by t1.purchase_time desc
    </select>

    <select id="getProductInInventoryPageCount" parameterType="Map" resultType="Integer">
        SELECT
        COUNT(1)
        FROM
        (SELECT
        9001 AS in_type,
        k1.`cas`,
        k1.`sku`,
        t.purchase_id,
        t.supplier_id,
        t.stock_status,
        d.dict_name AS stock_status_name,
        t.purchase_name,
        t.all_total,
        t.purchase_time,
        t2.staff_name,
        t3.`name` AS supplier_name
        FROM
        material_purchase t
        LEFT JOIN staff_info t2
        ON (t.staff_id = t2.staff_id)
        LEFT JOIN cus_supplier_info t3
        ON (t.supplier_id = t3.cs_sup_id)
        LEFT JOIN pss_dict d
        ON (t.stock_status = d.dict_id)
        LEFT JOIN material_purchase_detail k
        ON k.`purchase_id` = t.`purchase_id`
        LEFT JOIN product_material_info k1
        ON k1.`product_id` = k.`product_id`
        WHERE t.purchase_isdel = 0
        UNION
        ALL
        SELECT
        7003 AS in_type,
        k3.cas,
        k3.sku,
        p1.research_id,
        '',
        p1.status,
        p2.dict_name AS stock_status_name,
        p1.research_name,
        p1.amount,
        p1.research_time,
        p3.staff_name,
        ''
        FROM
        product_research p1
        LEFT JOIN pss_dict p2
        ON (p1.status = p2.dict_id)
        LEFT JOIN staff_info p3
        ON (p3.staff_id = p1.research_staff)
        LEFT JOIN product_material_info k3
        ON k3.`product_id` = p1.`product_id`
        WHERE p1.research_is_del = 0
        UNION
        ALL
        SELECT
        9002 AS in_type,
        k5.cas,
        k5.sku,
        t1.sale_id,
        t1.customer_id,
        t3.stock_status,
        d2.dict_name AS stock_status_name,
        t1.sale_name,
        t1.all_total,
        t3.return_time,
        sf.staff_name,
        cu.`name` AS supplier_name
        FROM
        product_sale t1
        LEFT JOIN product_sale_return t3
        ON (t3.sale_id = t1.sale_id)
        LEFT JOIN pss_dict d2
        ON (t3.stock_status = d2.dict_id)
        LEFT JOIN cus_supplier_info cu
        ON (cu.cs_sup_id = t1.customer_id)
        LEFT JOIN staff_info sf
        ON (sf.staff_id = t1.staff_id)
        LEFT JOIN product_sale_return_detail k4
        ON k4.r_sale_id = t3.`r_sale_id`
        LEFT JOIN product_material_info k5
        ON k5.product_id = k4.product_id
        WHERE t1.sale_isdel = 0) t1
        WHERE t1.stock_status IS NOT NULL
        <if test="params.in_type!=null and params.in_type!=''">
            and t1.in_type = ${params.in_type}
        </if>
        <if test="params.stock_status!=null and params.stock_status!=''">
            and (t1.stock_status =${params.stock_status})
        </if>
        <if test="params.time!=null and params.time!=''">
            and ${params.time}
        </if>
        <if test="params.search!=null and params.search!=''">
            AND (t1.cas like '%${params.search}%' or t1.sku like '%${params.search}%' or staff_name like '%${params.search}%')
        </if>
        <if test="params.start_time!=null and params.start_time!='' or params.end_time!=null and params.end_time!=''">
            AND t1.purchase_time between '${params.start_time}' and date_add('${params.end_time}',interval 1 day)
        </if>
    </select>

    <select id="getPurchaseInventoryList" parameterType="Map" resultType="Material_purchase_detail">
SELECT
	t1.purchase_d_id,
	t1.product_id,
	t4.amount AS amount_used,
	t4.space_id,
	(
		SELECT
			GROUP_CONCAT(t5.space_name, '-')
		FROM
			dict_warehouse_space t5
		WHERE
			FIND_IN_SET(
				t5.space_id,
				query_parent_warehouse (t4.space_id)
			)
	) AS space_name,
	t4.in_count,
	t4.enter_d_ids,
	t1.amount,
	t4.out_amount,
	t1.unit,
	t1.purity,
	t1.unit_price,
	t1.total,
	t1.`desc`,
	t1.use_id,
	t2.name_ch AS product_name,
	t2.name_en AS product_name_en,
	t2.product_type,
	t3.dict_name AS product_type_name
FROM
	material_purchase_detail t1
LEFT JOIN (
	SELECT
		e.enter_type_billno,
		sum(d.amount) AS amount,
		sum(o.amount) as out_amount,
		d.product_id,
		s.space_id,
		count(d.product_id) as in_count,
		GROUP_CONCAT(d.enter_d_id) as enter_d_ids
	FROM
		product_material_enter e
	LEFT JOIN product_material_enter_detail d ON (e.enter_id = d.enter_id)
	LEFT JOIN dict_warehouse_space s ON (d.space_id = s.space_id)
	left join product_material_out_detail o on ( d.batch_no= o.batch_no)
	GROUP BY
		e.enter_type_billno,
		d.product_id,
		s.space_id
) t4 ON (
	t1.purchase_id = t4.enter_type_billno
	AND t1.product_id = t4.product_id
)
LEFT JOIN product_material_info t2 ON (
	t1.product_id = t2.product_id
)
LEFT JOIN pss_dict t3 ON (t2.product_type = t3.dict_id)
WHERE
	t1.purchase_detail_isdel = 0
AND t1.purchase_id =#{purchase_id}
ORDER BY
	t1.purchase_d_id DESC
    </select>

    <select id="getProductMaterialEnterDetail" parameterType="Map" resultType="Product_material_enter_detail">
        SELECT
        t.enter_d_id,
        t.Batch_no,
        t2.product_id,
        t2.name_ch AS product_name,
        t2.name_en AS product_name_en,
        t.amount,
        t.left_amount,
        t3.staff_name,
        t.enter_date,
        t.enter_desc
        FROM
            product_material_enter_detail t
        LEFT JOIN product_material_info t2 ON (t.product_id = t2.product_id)
        LEFT JOIN staff_info t3 ON (t.staff_id = t3.staff_id)
        WHERE
            t.enter_d_id IN (${enter_d_ids})
    </select>

    <select id="purchasingInventorySave" parameterType="java.util.Map" statementType="CALLABLE"
            resultType="java.util.Map">
        CALL PRO_PRODUCT_INVENTORY_IN(
        #{purchase_id, mode=IN, jdbcType=INTEGER},
        #{PRODUCT_ID, mode=IN, jdbcType=INTEGER},
        #{new_amount, mode=IN, jdbcType=DOUBLE},
        #{left_amount , mode=IN, jdbcType=DOUBLE},
        #{unit, mode=IN, jdbcType=NVARCHAR},
        #{purchase_d_id, mode=IN, jdbcType=INTEGER},
        #{space_id, mode=IN, jdbcType=INTEGER},
        #{purity, mode=IN, jdbcType=NVARCHAR},
        #{oper_id, mode=IN, jdbcType=INTEGER},
        #{BATCH_NO, mode=IN, jdbcType=NVARCHAR},
        #{DETAIL_TEXT,mode=IN, jdbcType=NVARCHAR},
        #{ENTER_NAME,mode=IN, jdbcType=NVARCHAR},
        #{o_ret, mode=INOUT, jdbcType=NVARCHAR}
        )
    </select>
    <select id="venditionInInventory" parameterType="java.util.Map" statementType="CALLABLE"
            resultType="java.util.Map">
         CALL PRO_VENDITION_IN_INVENTORY(
        #{P_SALE_ID, mode=IN, jdbcType=INTEGER},
        #{P_BATCH_NO, mode=IN, jdbcType=NVARCHAR},
        #{P_DESC, mode=IN, jdbcType=NVARCHAR},
        #{P_AMOUNT, mode=IN, jdbcType=INTEGER}
        )
    </select>

    <select id="getVenditionProductList" parameterType="Map" resultType="Product_sale_detail">
                        SELECT
                        t.sale_d_id,
                        t.batch_no,
                        t2.name_en AS product_name,
                        r.stock_status as sale_status,
                        t.product_id,
                        t.amount AS amount_used,
                                r.amount,
                        t.purity,
                        t.unit,
                        t.unit_price,
                        t.space_id,

                        (
                        SELECT
                        GROUP_CONCAT(d.space_name, '-')
                        FROM
                        dict_warehouse_space d
                        WHERE
                        FIND_IN_SET(
                        d.space_id,
                        query_parent_warehouse (t.space_id)
                        )
                        ) AS space_name,
                        t.`desc`
                        FROM
                        product_sale_detail t
                        LEFT JOIN product_material_info t2 ON (t2.product_id = t.product_id)
                        LEFT JOIN product_sale_return_detail r on(r.sale_d_id = t.sale_d_id)
                        LEFT JOIN product_material_out_detail dt on(dt.enter_d_id = t.sale_d_id)
                        where t.sale_d_isdel =0 and dt.amount is not null and t.sale_id = #{sale_id}
    </select>

    <select id="warning_select" parameterType="Map" resultType="Product_material_enter">
            SELECT
              CASE
                WHEN t.`warning_amount`> SUM(t1.`amount`)
                THEN SUM(t1.`amount`)
                ELSE -1
              END AS amount,
              t.cas,
              t.sku,
              t.name_ch,
              t.name_en
            FROM
              `product_material_info` t
              LEFT JOIN `product_material_enter_detail` t1
                ON t.`product_id` = t1.`product_id`
            WHERE t.`warning_amount` IS NOT NULL
              AND t1.`enter_d_isdel` = 0
              AND t.status = 0
            GROUP BY t1.`product_id`
    </select>
    <update id="inventory_check" parameterType="Map" >
       UPDATE
          product_material_enter_detail
        SET
          amount=#{amount}
        WHERE `enter_d_id`=#{enter_d_id}
    </update>

    <select id="moblieSelect" parameterType="Map" resultType="staff_info">
        SELECT
        t1.purchase_id,
        t1.product_id,
        t2.use_amount,
        t2.use_unit,
        t2.purity,
        t3.staff_name,
        t3.mobilephone
        FROM
        material_purchase_detail t1
        LEFT JOIN product_use t2 ON t1.use_id = t2.use_id
        LEFT JOIN staff_info t3 ON t3.staff_id = t2.use_staff
        WHERE
        t1.purchase_id = #{purchase_id}
    </select>
    <select id="productSelect" parameterType="Map" resultType="product_use">
       SELECT
          t1.purchase_id,
          t1.product_id,
          t2.use_amount,
          t2.use_unit,
          t2.purity,
          t3.staff_name,
          t3.mobilephone,
          t4.cas,
          t2.`use_time`
        FROM
          material_purchase_detail t1
          LEFT JOIN product_use t2
            ON t1.use_id = t2.use_id
          LEFT JOIN staff_info t3
            ON t3.staff_id = t2.use_staff
          LEFT JOIN product_material_info t4 ON t4.`product_id` = t1.`product_id`
        WHERE t1.purchase_id = #{purchase_id}
    </select>

</mapper>
